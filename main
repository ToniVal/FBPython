from pid import PIDController
from boolOp import boolOperators
from arithmeticOp import arithmeticOperators

""" # Example usage:
desired_setpoint = 50
current_measurement = 30
kp = 0.6
ki = 0.005
kd = 0.1

pid = PIDController(desired_setpoint, kp, ki, kd)

for _ in range(100):
    control_output = pid.update(current_measurement)
    current_measurement += control_output  # Simulate a change in the system state
    print(f"Control Output: {control_output}")
 """
""" BOR = boolOperators.bNot(False)

print(BOR) """

varOutT = "none"
nInp = arithmeticOperators.numInOut("input",6, varOutT)
print(nInp)
value1, value2 = nInp()
nOutp = arithmeticOperators.numInOut("output",value1, value2) #how do I reference to variable that's returned when executing a function?
print(nOutp)